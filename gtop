const canvas = document.getElementById('gameCanvas');
const ctx = canvas.getContext('2d');

let ballX = canvas.width / 2;
let ballY = 0;
let ballRadius = 20;
let ballSpeed = 2;

let catcherX = canvas.width / 2 - 50;
let catcherWidth = 100;
let catcherHeight = 20;
let catcherSpeed = 5;
let rightPressed = false;
let leftPressed = false;

document.addEventListener('keydown', keyDownHandler, false);
document.addEventListener('keyup', keyUpHandler, false);

function keyDownHandler(e) {
    if (e.key == 'Right' || e.key == 'ArrowRight') {
        rightPressed = true;
    } else if (e.key == 'Left' || e.key == 'ArrowLeft') {
        leftPressed = true;
    }
}

function keyUpHandler(e) {
    if (e.key == 'Right' || e.key == 'ArrowRight') {
        rightPressed = false;
    } else if (e.key == 'Left' || e.key == 'ArrowLeft') {
        leftPressed = false;
    }
}

function drawBall() {
    ctx.beginPath();
    ctx.arc(ballX, ballY, ballRadius, 0, Math.PI * 2);
    ctx.fillStyle = '#0095DD';
    ctx.fill();
    ctx.closePath();
}

function drawCatcher() {
    ctx.beginPath();
    ctx.rect(catcherX, canvas.height - catcherHeight, catcherWidth, catcherHeight);
    ctx.fillStyle = '#0095DD';
    ctx.fill();
    ctx.closePath();
}

function moveCatcher() {
    if (rightPressed && catcherX < canvas.width - catcherWidth) {
        catcherX += catcherSpeed;
    } else if (leftPressed && catcherX > 0) {
        catcherX -= catcherSpeed;
    }
}

function detectCollision() {
    if (ballY + ballRadius > canvas.height - catcherHeight &&
        ballX > catcherX && ballX < catcherX + catcherWidth) {
        ballY = -ballRadius;
        ballX = Math.random() * (canvas.width - ballRadius * 2) + ballRadius;
    } else if (ballY + ballRadius > canvas.height) {
        alert('Game Over');
        document.location.reload();
    }
}

function draw() {
    ctx.clearRect(0, 0, canvas.width, canvas.height);
    drawBall();
    drawCatcher();
    moveCatcher();
    detectCollision();
    ballY += ballSpeed;
    requestAnimationFrame(draw);
}

draw();
